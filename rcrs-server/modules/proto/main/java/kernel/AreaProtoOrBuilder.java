// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RCRS.proto

package kernel;

public interface AreaProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:simpleRCRS.AreaProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string uRN = 1;</code>
   * @return The uRN.
   */
  java.lang.String getURN();
  /**
   * <code>string uRN = 1;</code>
   * @return The bytes for uRN.
   */
  com.google.protobuf.ByteString
      getURNBytes();

  /**
   * <code>int32 iD = 2;</code>
   * @return The iD.
   */
  int getID();

  /**
   * <code>int32 x = 3;</code>
   * @return The x.
   */
  int getX();

  /**
   * <code>int32 y = 4;</code>
   * @return The y.
   */
  int getY();

  /**
   * <code>repeated .simpleRCRS.EdgeProto edges = 5;</code>
   */
  java.util.List<kernel.EdgeProto> 
      getEdgesList();
  /**
   * <code>repeated .simpleRCRS.EdgeProto edges = 5;</code>
   */
  kernel.EdgeProto getEdges(int index);
  /**
   * <code>repeated .simpleRCRS.EdgeProto edges = 5;</code>
   */
  int getEdgesCount();
  /**
   * <code>repeated .simpleRCRS.EdgeProto edges = 5;</code>
   */
  java.util.List<? extends kernel.EdgeProtoOrBuilder> 
      getEdgesOrBuilderList();
  /**
   * <code>repeated .simpleRCRS.EdgeProto edges = 5;</code>
   */
  kernel.EdgeProtoOrBuilder getEdgesOrBuilder(
      int index);

  /**
   * <code>repeated int32 blockades = 6;</code>
   * @return A list containing the blockades.
   */
  java.util.List<java.lang.Integer> getBlockadesList();
  /**
   * <code>repeated int32 blockades = 6;</code>
   * @return The count of blockades.
   */
  int getBlockadesCount();
  /**
   * <code>repeated int32 blockades = 6;</code>
   * @param index The index of the element to return.
   * @return The blockades at the given index.
   */
  int getBlockades(int index);

  /**
   * <code>repeated int32 apexList = 7;</code>
   * @return A list containing the apexList.
   */
  java.util.List<java.lang.Integer> getApexListList();
  /**
   * <code>repeated int32 apexList = 7;</code>
   * @return The count of apexList.
   */
  int getApexListCount();
  /**
   * <code>repeated int32 apexList = 7;</code>
   * @param index The index of the element to return.
   * @return The apexList at the given index.
   */
  int getApexList(int index);

  /**
   * <code>repeated int32 neighbours = 8;</code>
   * @return A list containing the neighbours.
   */
  java.util.List<java.lang.Integer> getNeighboursList();
  /**
   * <code>repeated int32 neighbours = 8;</code>
   * @return The count of neighbours.
   */
  int getNeighboursCount();
  /**
   * <code>repeated int32 neighbours = 8;</code>
   * @param index The index of the element to return.
   * @return The neighbours at the given index.
   */
  int getNeighbours(int index);

  /**
   * <pre>
   *&#47;// below for buildings
   * </pre>
   *
   * <code>int32 floors = 9;</code>
   * @return The floors.
   */
  int getFloors();

  /**
   * <code>bool ignition = 10;</code>
   * @return The ignition.
   */
  boolean getIgnition();

  /**
   * <code>int32 fieryness = 11;</code>
   * @return The fieryness.
   */
  int getFieryness();

  /**
   * <code>int32 brokenness = 12;</code>
   * @return The brokenness.
   */
  int getBrokenness();

  /**
   * <code>int32 buildingCode = 13;</code>
   * @return The buildingCode.
   */
  int getBuildingCode();

  /**
   * <code>int32 buildingAttributes = 14;</code>
   * @return The buildingAttributes.
   */
  int getBuildingAttributes();

  /**
   * <code>int32 groundArea = 15;</code>
   * @return The groundArea.
   */
  int getGroundArea();

  /**
   * <code>int32 totalArea = 16;</code>
   * @return The totalArea.
   */
  int getTotalArea();

  /**
   * <code>int32 temperature = 17;</code>
   * @return The temperature.
   */
  int getTemperature();

  /**
   * <code>int32 importance = 18;</code>
   * @return The importance.
   */
  int getImportance();

  /**
   * <code>bool isOnFire = 19;</code>
   * @return The isOnFire.
   */
  boolean getIsOnFire();
}
